{"version":3,"sources":["Components/AddCategorias.jsx","helpers/getGifts.js","hooks/useFectchGifs.js","Components/GitGridItem.jsx","Components/GifGrid.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategorias","setCategorias","useState","InputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","categ","type","placeholder","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gift","map","imagen","id","title","images","downsized_medium","require","useEffect","GitGridItem","src","alt","GifGrid","loading","state","setstate","then","imgs","useFectchGifts","imagenes","key","GifExpertApp","categorias","category","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACI,0BAAMC,UAAU,eAAeC,SARhB,SAACC,GAChBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAO,IAC5BT,GAAc,SAAAU,GAAK,OAAGR,GAAH,mBAAiBQ,OACpCP,EAAc,OAKV,+BACI,2BAAOQ,KAAK,OAAQP,UAAU,kBAAkBQ,YAAY,gCAAgCC,MAAOX,EAAYY,SAbtG,SAACR,GAClBH,EAAcG,EAAES,OAAOF,a,uBCLjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACgCC,UAAWH,GAD3C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdV,IAAG,UAAEQ,EAAOG,cAAT,aAAE,EAAeC,iBAAiBZ,QAR1B,kBAYVM,GAZU,4CAAH,sD,ECEUO,EAAQ,GAAhC/B,E,EAAAA,SAAUgC,E,EAAAA,UCAJC,EAAc,SAAC,GAAmB,EAAlBN,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,yBAAKf,UAAU,qBAEX,yBAAOA,UAAU,OAAO+B,IAAKhB,EAAKiB,IAAKP,IACvC,uBAAGzB,UAAU,sEAAsEyB,KCJlFQ,EAAU,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,EFCX,SAACA,GAAa,IAAD,EACXhB,EAAS,CAC/BuB,KAAM,GACNc,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAerC,OAVAP,GAAU,WACHjB,EAAQC,GACPwB,MAAK,SAACC,GAECF,EAAS,CACLhB,KAAMkB,EACNJ,SAAS,SAG1B,CAACrB,IACIsB,EEfuBI,CAAe1B,GAAtCqB,EAD4B,EAC5BA,QAAaM,EADe,EACpBpB,KAGhB,OACI,kBAAC,WAAD,KACI,wBAAIpB,UAAU,oBAAoBa,GACjCqB,GAAU,uBAAGlC,UAAU,oCAAb,eACX,yBAAKA,UAAU,kEAEPwC,EAASlB,KAAI,SAACkB,GAAD,OACT,kBAAC,EAAD,eAAaC,IAAKD,EAAShB,IAAQgB,UCV9CE,EAAe,WAAM,MAEK7C,mBAAS,CAAC,WAFf,mBAExB8C,EAFwB,KAEZ/C,EAFY,KAQ9B,OACI,kBAAC,WAAD,KACI,yBAAKI,UAAU,gBACf,wBAAIA,UAAU,SAAd,oBACA,kBAAC,EAAD,CAAeJ,cAAeA,IAC9B,wBAAII,UAAU,UACd,4BAEI2C,EAAWrB,KAAI,SAAAsB,GAAQ,OAClB,kBAAC,EAAD,CAASH,IAAKG,EAAU/B,UAAW+B,QAI5C,4BAAQ5C,UAAU,UAAlB,wD,MCjBZ6C,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,a","file":"static/js/main.8cf557fa.chunk.js","sourcesContent":["import React, {useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategorias = ({setCategorias}) => {\r\n    const [InputValue, setInputValue] = useState('');\r\n    const OnChangeValue= (e) =>{\r\n        setInputValue(e.target.value)\r\n    };\r\n    const handleSumit= (e)=>{\r\n        e.preventDefault();\r\n        if(InputValue.trim().length>2){\r\n        setCategorias(categ=>[InputValue,...categ,]);\r\n        setInputValue('')\r\n        };\r\n    };\r\n    return (\r\n        <form className=\"wrapper-form\" onSubmit={handleSumit}>\r\n            <label>\r\n                <input type=\"text\"  className=\"input-categoria\" placeholder='\"ingresa tu  nueva categoria\"' value={InputValue} onChange={OnChangeValue} /> \r\n            </label>\r\n        </form>\r\n    );\r\n}\r\nAddCategorias.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n};\r\n"," export const getGifs = async(categoria) =>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI( categoria )}&limit=10&api_key=YtR1Oq7fjYBcgrjmJ2fGHVXeYY0H7C34`;\r\n     const respuesta= await fetch(url);\r\n     const {data} = await respuesta.json();\r\n     const gift = data.map(imagen=>{\r\n         return {\r\n             id: imagen.id,\r\n             title: imagen.title,\r\n             url: imagen.images?.downsized_medium.url,\r\n         }\r\n     })\r\n    //    console.log(gift);\r\n       return gift;\r\n} ","import { getGifs } from \"../helpers/getGifts\";\r\n\r\nconst {useState, useEffect } = require(\"react\");\r\n\r\n export const useFectchGifts=(categoria)=>{\r\n     const [state, setstate] = useState({\r\n         data: [],\r\n         loading: true,\r\n     });\r\n     useEffect(()=>{\r\n            getGifs(categoria)\r\n            .then((imgs)=>{\r\n                    // console.log(imgs);\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n            })\r\n     },[categoria])\r\n     return state; // {data:[], loading: true}\r\n }","import React from 'react'\r\n\r\nexport const GitGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"wrapper-gift-item\">\r\n            {/* {imagenes.title} */}\r\n            < img  className=\"gift\" src={url} alt={title} />\r\n            <p className=\"titulo-gift animate__animated animate__bounceIn animate__delay-1s \">{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Fragment}from 'react'\r\nimport { useFectchGifts } from '../hooks/useFectchGifs'\r\n import { GitGridItem } from './GitGridItem';\r\nexport const GifGrid = ({categoria}) => {\r\n     const {loading,data:imagenes}=useFectchGifts(categoria);\r\n    // console.log(data);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"titulo-Categoria\">{categoria}</h3>\r\n            {loading&& <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n            <div className=\"wrapper-card-gift-item animate__animated animate__bounceInDown\">\r\n                {\r\n                    imagenes.map((imagenes)=>(\r\n                        <GitGridItem key={imagenes.id} {...imagenes} />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment,useState } from 'react'\r\nimport { AddCategorias } from './Components/AddCategorias';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n   //const categorias =['Perros','Anime','Videojuegos', 'One-punch'];\r\n   const [categorias, setCategorias] = useState(['Perros']);\r\n//    const hadleAddCategorias=()=>{\r\n//         // setCategorias([...categorias,'Pokemon']);\r\n//         setCategorias(categ=>[...categ,'Pokemon']);\r\n//    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"wrapper-main\">\r\n            <h2 className=\"Title\">**GifExpertApp**</h2>\r\n            <AddCategorias setCategorias={setCategorias} />\r\n            <hr className=\"Linea\"/>\r\n            <ol>\r\n            {\r\n                categorias.map(category=>(\r\n                     <GifGrid key={category} categoria={category} />\r\n                ))\r\n            }\r\n            </ol>\r\n            <footer className=\"footer\">Aplicación creada por: Benítez Medina Uriel</footer>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\nimport 'animate.css'\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('GiftApp')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}